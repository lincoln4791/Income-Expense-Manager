name: Android CI

on:
  push:
    branches:
      - ci-cd
  pull_request:
    branches:
      - ci-cd

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.0.0'

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Grant Permission
        run: |
          chmod +x gradlew

      - name: Build Android App
        run: |
          ./gradlew assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk

      - name: Upload to Firebase App Distribution
        run: |
          firebase appdistribution:distribute app/build/outputs/apk/release/app-release.apk --app ${{ secrets.FIREBASE_APP_ID }} --token ${{ secrets.FIREBASE_TOKEN }}
          
          name: Notify Discord on App Upload

      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          APP_VERSION: "1.0"
          RELEASE_NOTES: "New release uploaded"
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -d "{\"content\": \"New app version uploaded - Version: $APP_VERSION, Release Notes: $RELEASE_NOTES\"}" \
            $DISCORD_WEBHOOK_URL


#      - name: Set up JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: '11'
#
#      - name: Grant execute permission for Gradlew
#        run: chmod +x ./gradlew
#
#      - name: Build and test
#        run: ./gradlew clean assembleDebug testDebug
#
#      - name: Upload APK
#        uses: actions/upload-artifact@v2
#        with:
#          name: app-debug
#          path: app/build/outputs/apk/debug/app-debug.apk